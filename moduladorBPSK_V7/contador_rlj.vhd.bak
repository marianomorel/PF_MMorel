-- Quartus II VHDL Template
-- Binary Up/Down conter with Saturation

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_signed.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

entity contador2 is

	port 
	(
		clk		: in std_logic;
		reset	   : in std_logic;
		periodos : in std_logic_vector (1 downto 0);
		q		   : buffer std_logic;
		
	);

end entity;

architecture behavioral of contador2 is

	signal MAX_cont: integer range 0 to 8193;
begin
	
	
process (periodos)
	
	begin
	
	case periodos is
	when "00" => MAX_cont<=1;
       
		  
	when "01" => MAX_cont<=2;

	
	when "10" => MAX_cont<=4;
	    
	
	when "11" => MAX_cont<=8;
       
 
  end case;
	
end process;
	
	
	process (clk) 
		variable cnt : integer range 0 to 8193;
	begin
	
		-- Synchronously update the conter
			if (reset = '1') then
				-- Reset the conter to 0
				cnt := 0;

			elsif (clk'event and clk='1') then
				-- Increment/decrement the conter, 
				-- if the limit is not exceeded
				cnt := cnt + 1;
				if (cnt=MAX_cont) then 
				cnt:=0;
				q<=not(q);
				
				end if;
			end if;
		-- Output the current cont
		--cont_vector <= std_logic_vector(to_signed((cnt), cont_vector'length));
		
	end process;
	
	
 
 end behavioral; 